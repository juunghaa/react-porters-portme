{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/porters/src/components/Auth/LoginForm.jsx\",\n  _s = $RefreshSig$();\n// pages/LoginPage.jsx를 만들어서 로그인 페이지(디자인)를 관리해야 하는데\n//제가 재사용 UI 로그인 폼 자체(component)에 페이지 디자인을 넣어버려서..\n//나중에 component와 page를 나눠야할 듯 합니다..\n//우선 급한건 아닌 것 같아서 냅뒀어요!!\n\n// 로그인 UI\nimport React, { useState } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm({\n  onLoginSuccess\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); //유효성 검사 추가하기\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault(); //새로고침 방지하고 현재 이메일비번 콘솔출력\n    // setLoginError(\"이메일 또는 비밀번호가 올바르지 않아요\"); //로그인 실패 테스트용 코드\n\n    console.log('로그인 시도: ', {\n      email,\n      password\n    });\n    let valid = true;\n\n    // 에러 초기화\n    setEmailError('');\n    setPasswordError('');\n    if (!email) {\n      setEmailError('이메일을 입력해주세요.');\n      valid = false;\n    } else if (!email.includes('@')) {\n      setEmailError('올바른 메일 형식으로 입력해주세요.');\n      valid = false;\n    }\n    if (!password) {\n      setPasswordError('비밀번호를 입력해주세요.');\n      valid = false;\n    }\n    if (!valid) return;\n    onSubmit(email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-alert\",\n      children: [\"\\u26A0\\uFE0F \", loginError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"\\uB85C\\uADF8\\uC778\\uD558\\uACE0 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-subtitle\",\n      children: [\"\\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uC313\\uC740 \\uACBD\\uD5D8\\uC744,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 55\n      }, this), \"\\uB098\\uB9CC\\uC758 \\uBC29\\uC2DD\\uC73C\\uB85C \\uC815\\uB9AC\\uD560 \\uC218 \\uC788\\uC5B4\\uC694\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: emailError ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: passwordError ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\",\n      children: \"\\uB610\\uB294\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onLoginSuccess: onLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"5NdxhA+IDVZfFrtD7+MPv1qoD0E=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","auth","GoogleLoginButton","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","_s","email","setEmail","password","setPassword","error","setError","emailError","setEmailError","passwordError","setPasswordError","loginError","setLoginError","handleSubmit","e","preventDefault","console","log","valid","includes","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","href","_c","$RefreshReg$"],"sources":["/Users/jun8ha/porters/src/components/Auth/LoginForm.jsx"],"sourcesContent":["// pages/LoginPage.jsx를 만들어서 로그인 페이지(디자인)를 관리해야 하는데\n//제가 재사용 UI 로그인 폼 자체(component)에 페이지 디자인을 넣어버려서..\n//나중에 component와 page를 나눠야할 듯 합니다..\n//우선 급한건 아닌 것 같아서 냅뒀어요!!\n\n// 로그인 UI\nimport React, {useState} from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport GoogleLoginButton from './GoogleLoginButton';\n\nexport default function LoginForm({onLoginSuccess}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(''); //유효성 검사 추가하기\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [loginError, setLoginError] = useState('');\n\n    const handleSubmit = (e)=>{\n        e.preventDefault(); //새로고침 방지하고 현재 이메일비번 콘솔출력\n        // setLoginError(\"이메일 또는 비밀번호가 올바르지 않아요\"); //로그인 실패 테스트용 코드\n\n        console.log('로그인 시도: ', {email, password});\n\n        let valid = true;\n\n        // 에러 초기화\n        setEmailError('');\n        setPasswordError('');\n\n        if (!email) {\n            setEmailError('이메일을 입력해주세요.');\n            valid = false;\n        } else if (!email.includes('@')) {\n            setEmailError('올바른 메일 형식으로 입력해주세요.');\n            valid = false;\n        }\n\n        if (!password) {\n            setPasswordError('비밀번호를 입력해주세요.');\n            valid = false;\n        }\n\n        if (!valid) return;\n\n        onSubmit(email, password);\n    };\n        \n    return(\n        <form onSubmit={handleSubmit} className=\"login-form\">\n            {loginError && (\n            <div className=\"login-alert\">\n                ⚠️ {loginError}\n            </div>\n            )}\n            \n            <h2 className=\"login-title\">로그인하고 포트폴리오를 만들어보세요</h2>\n            <p className=\"login-subtitle\">지금까지 쌓은 경험을,<br />나만의 방식으로 정리할 수 있어요</p>\n\n            <div className=\"input-group\">\n                <label htmlFor=\"email\">이메일 주소</label>\n                <input\n                type=\"text\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className={emailError ? 'input-error' : ''}\n                />\n                {emailError && <p className=\"error-text\">{emailError}</p>}\n\n            </div>\n\n            <div className=\"input-group\">\n                <label htmlFor=\"password\">비밀번호</label>\n                <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className={passwordError ? 'input-error' : ''}\n                />\n                {passwordError && <p className=\"error-text\">{passwordError}</p>}\n\n            </div>\n\n            {error && <p className=\"error-text\">{error}</p>}\n\n            <div className=\"login-options\">\n                <a href=\"#\">회원가입 | 비밀번호 찾기</a>\n                <button type=\"submit\" className=\"submit-button\">로그인</button>\n            </div>\n\n            <div className=\"divider\">또는</div>\n\n  <GoogleLoginButton onLoginSuccess={onLoginSuccess} />\n  {/* <NaverLoginButton /> 여기에 추가하면 돼 */}\n</form>\n\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
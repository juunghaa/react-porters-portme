{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/porters/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoginForm from './components/Auth/LoginForm';\nimport LogoutButton from './components/Auth/LogoutButton';\nimport SignupForm from './components/Auth/SignupForm';\nimport MainPage from './components/Main/MainPage';\nimport FeatureButtons from './components/Main/FeatureButtons';\nimport ProgressTracker from './components/Main/ProgressTracker';\nimport RecentSlides from './components/Main/RecentSlides';\nimport './App.css';\nimport ActivityEditor from './components/Editor/ActivityEditor';\nimport ActivityEditorPage from './pages/ActivityEditorPage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\n\n// 나중에 로그인 이후 로그인폼 감추고 메인만 보이도록 정리하거나.. 페이지 관리 필요 \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    console.log(\"로그아웃 되었습니다.\");\n  };\n  return (\n    /*#__PURE__*/\n    // <Router>\n    //   <Routes>\n    //     <Route path=\"/\" element={<MainPage />} />\n    //     <Route path=\"/login\" element={<LoginForm />} />\n    //     <Route path=\"/signup\" element={<SignupForm />} />\n    //   </Routes>\n    //   </Router>  \n    // 하나의 페이지 안에서 보여줄 화면을 바꾸는 방식...\n    _jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivityEditorPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4\\uC559\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LoginPage, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignupPage, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  );\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LoginForm","LogoutButton","SignupForm","MainPage","FeatureButtons","ProgressTracker","RecentSlides","ActivityEditor","ActivityEditorPage","LoginPage","SignupPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","handleLoginSuccess","handleLogout","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","onLoginSuccess","_c","$RefreshReg$"],"sources":["/Users/jun8ha/porters/src/App.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport LoginForm from './components/Auth/LoginForm';\nimport LogoutButton from './components/Auth/LogoutButton';\nimport SignupForm from './components/Auth/SignupForm';\nimport MainPage from './components/Main/MainPage';\nimport FeatureButtons from './components/Main/FeatureButtons';\nimport ProgressTracker from './components/Main/ProgressTracker';\nimport RecentSlides from './components/Main/RecentSlides';\nimport './App.css';\nimport ActivityEditor from './components/Editor/ActivityEditor';\nimport ActivityEditorPage from './pages/ActivityEditorPage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\n\n\n// 나중에 로그인 이후 로그인폼 감추고 메인만 보이도록 정리하거나.. 페이지 관리 필요 \n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLoginSuccess=()=>{\n    setIsLoggedIn(true);\n  };\n  const handleLogout=()=>{\n    setIsLoggedIn(false);\n    console.log(\"로그아웃 되었습니다.\");\n  };\n\n  return (\n    // <Router>\n    //   <Routes>\n    //     <Route path=\"/\" element={<MainPage />} />\n    //     <Route path=\"/login\" element={<LoginForm />} />\n    //     <Route path=\"/signup\" element={<SignupForm />} />\n\n    //   </Routes>\n    //   </Router>  \n\n\n    // 하나의 페이지 안에서 보여줄 화면을 바꾸는 방식...\n      <main>\n        <MainPage />\n        <ActivityEditorPage />\n\n      {isLoggedIn ? (\n        <>\n        <h2>환영합니다앙</h2>\n        <LogoutButton onLogout={handleLogout}/>\n        <MainPage />\n        </>) : (\n          <>\n          <LoginPage onLoginSuccess={handleLoginSuccess}/>\n          <SignupPage onLoginSuccess={handleLoginSuccess} />\n          </>\n        )\n      }\n    </main>\n    \n    \n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;;AAG3C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMoB,kBAAkB,GAACA,CAAA,KAAI;IAC3BD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,MAAME,YAAY,GAACA,CAAA,KAAI;IACrBF,aAAa,CAAC,KAAK,CAAC;IACpBG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IAEA;IACA;IAGA;IACEV,OAAA;MAAAW,QAAA,gBACEX,OAAA,CAACT,QAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZf,OAAA,CAACJ,kBAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEvBV,UAAU,gBACTL,OAAA,CAAAE,SAAA;QAAAS,QAAA,gBACAX,OAAA;UAAAW,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACff,OAAA,CAACX,YAAY;UAAC2B,QAAQ,EAAER;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvCf,OAAA,CAACT,QAAQ;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACV,CAAC,gBACDf,OAAA,CAAAE,SAAA;QAAAS,QAAA,gBACAX,OAAA,CAACH,SAAS;UAACoB,cAAc,EAAEV;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAChDf,OAAA,CAACF,UAAU;UAACmB,cAAc,EAAEV;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAChD,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;AAIX;AAACX,EAAA,CA3CuBD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
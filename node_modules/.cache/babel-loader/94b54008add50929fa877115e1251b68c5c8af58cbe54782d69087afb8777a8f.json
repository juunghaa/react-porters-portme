{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/porters/src/pages/SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SignupForm from '../components/Auth/SignupForm';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupPage({\n  onLoginSuccess\n}) {\n  _s();\n  const [signupError, setSignupError] = useState('');\n  const handleSignup = async ({\n    email,\n    password,\n    name\n  }) => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert('회원가입이 완료되었습니다!');\n      // 회원가입 이후 처리 (ex: 로그인 상태 전환 등)\n      onLoginSuccess(); // 로그인 상태 전환\n    } catch (err) {\n      console.error(err);\n      setSignupError('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SignupForm, {\n    onSubmit: handleSignup,\n    signupError: signupError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"AP7sKxcu9L25npUsrgui2NYBW1w=\");\n_c = SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","SignupForm","createUserWithEmailAndPassword","auth","jsxDEV","_jsxDEV","SignupPage","onLoginSuccess","_s","signupError","setSignupError","handleSignup","email","password","name","alert","err","console","error","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jun8ha/porters/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SignupForm from '../components/Auth/SignupForm';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../firebase';\n\nexport default function SignupPage({ onLoginSuccess }) {\n  const [signupError, setSignupError] = useState('');\n\n  const handleSignup = async ({ email, password, name }) => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert('회원가입이 완료되었습니다!');\n        // 회원가입 이후 처리 (ex: 로그인 상태 전환 등)\n      onLoginSuccess(); // 로그인 상태 전환\n    } catch (err) {\n      console.error(err);\n      setSignupError('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  return (\n    <SignupForm onSubmit={handleSignup} signupError={signupError} />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,+BAA+B;AACtD,SAASC,8BAA8B,QAAQ,eAAe;AAC9D,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,YAAY,GAAG,MAAAA,CAAO;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,KAAK;IACxD,IAAI;MACF,MAAMZ,8BAA8B,CAACC,IAAI,EAAES,KAAK,EAAEC,QAAQ,CAAC;MAC3DE,KAAK,CAAC,gBAAgB,CAAC;MACrB;MACFR,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBN,cAAc,CAAC,0BAA0B,CAAC;IAC5C;EACF,CAAC;EAED,oBACEL,OAAA,CAACJ,UAAU;IAACkB,QAAQ,EAAER,YAAa;IAACF,WAAW,EAAEA;EAAY;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpE;AAACf,EAAA,CAlBuBF,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/api.js\n\nconst BASE_URL = process.env.REACT_APP_API_URL;\n\n// 로그인\nexport const login = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/api/auth/login/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: email,\n      password\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) {\n    throw new Error(data.detail || '로그인 실패');\n  }\n\n  // 토큰 및 사용자 정보 반환\n  return data; // { access, refresh, user }\n};\n\n// 내 프로필 조회\nexport const getMyProfile = async token => {\n  const res = await fetch(`${BASE_URL}/api/profiles/me/`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return await res.json();\n};\n\n// # fetch(`${baseUrl}/login`, {\n// #   method: 'POST',\n// #   body: JSON.stringify({ username, password }),\n// # });","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_URL","login","email","password","res","fetch","method","headers","body","JSON","stringify","username","data","json","ok","Error","detail","getMyProfile","token"],"sources":["/Users/jun8ha/porters/src/api.js"],"sourcesContent":["// src/api.js\n\nconst BASE_URL = process.env.REACT_APP_API_URL;\n\n// 로그인\nexport const login = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/api/auth/login/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username: email, password }),\n  });\n\n  const data = await res.json();\n\n  if (!res.ok) {\n    throw new Error(data.detail || '로그인 실패');\n  }\n\n  // 토큰 및 사용자 정보 반환\n  return data; // { access, refresh, user }\n};\n\n// 내 프로필 조회\nexport const getMyProfile = async (token) => {\n  const res = await fetch(`${BASE_URL}/api/profiles/me/`, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return await res.json();\n};\n\n\n\n// # fetch(`${baseUrl}/login`, {\n// #   method: 'POST',\n// #   body: JSON.stringify({ username, password }),\n// # });\n\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAE9C;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,kBAAkB,EAAE;IACrDS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,QAAQ,EAAET,KAAK;MAAEC;IAAS,CAAC;EACpD,CAAC,CAAC;EAEF,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EAE7B,IAAI,CAACT,GAAG,CAACU,EAAE,EAAE;IACX,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,MAAM,IAAI,QAAQ,CAAC;EAC1C;;EAEA;EACA,OAAOJ,IAAI,CAAC,CAAC;AACf,CAAC;;AAED;AACA,OAAO,MAAMK,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,mBAAmB,EAAE;IACtDU,OAAO,EAAE;MACP,eAAe,EAAE,UAAUW,KAAK;IAClC;EACF,CAAC,CAAC;EACF,OAAO,MAAMd,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB,CAAC;;AAID;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
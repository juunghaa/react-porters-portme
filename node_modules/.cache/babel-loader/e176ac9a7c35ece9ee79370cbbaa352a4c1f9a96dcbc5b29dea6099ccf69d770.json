{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/porters/src/components/Auth/LoginForm.jsx\",\n  _s = $RefreshSig$();\n// 로그인 UI\nimport React, { useState } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm({\n  onLoginSuccess\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); //유효성 검사 추가하기\n\n  const handleSubmit = e => {\n    e.preventDefault(); //새로고침 방지하고 현재 이메일비번 콘솔출력\n    console.log('로그인 시도: ', {\n      email,\n      password\n    });\n\n    // 백엔드 연동 코드 추가\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log('로그인 성공:', userCredential.user);\n      // 로그인 성공 시 상태 업데이트나 페이지 이동 추가 가능\n      onLoginSuccess(); //<<--상태업데이트페이지전환\n    }).catch(error => {\n      setError('로그인 실패: ' + error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"\\uB85C\\uADF8\\uC778\\uD558\\uACE0 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-subtitle\",\n      children: [\"\\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uC313\\uC740 \\uACBD\\uD5D8\\uC744,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 55\n      }, this), \"\\uB098\\uB9CC\\uC758 \\uBC29\\uC2DD\\uC73C\\uB85C \\uC815\\uB9AC\\uD560 \\uC218 \\uC788\\uC5B4\\uC694\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\"\n        // placeholder=\"example@domain.com\"\n        ,\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\"\n        // placeholder=\"********\"\n        ,\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\",\n      children: \"\\uB610\\uB294\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onLoginSuccess: onLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this)\n\n  /* 기존 코드 ->  */\n\n  /* 이메일과 비밀번호 입력 폼 */\n  //     <input type=\"email\" placeholder=\"이메일\" value={email}\n  //     onChange={(e)=> setEmail(e.target.value)}\n  //     required />\n  //     {/* placeholder는 사용자에게 보여주는 회색 안내 문구임 */}\n  //     {/* 인풋에 값이 입력되어야만 폼이 제출될 수 있도록 유효성 검사하는게 required */}\n  //     <input type=\"password\" placeholder=\"비밀번호\" value={password}\n  //     onChange={(e)=>setPassword(e.target.value)}\n  //     required />\n\n  //     {/* 에러 메시지 출력 */}\n  //     {error && <p className=\"error-text\">{error}</p>}\n\n  //     <button type=\"submit\">로그인</button>\n\n  //     <GoogleLoginButton onLoginSuccess={onLoginSuccess} />\n\n  // </form>\n  ;\n}\n_s(LoginForm, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","auth","GoogleLoginButton","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","console","log","then","userCredential","user","catch","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["/Users/jun8ha/porters/src/components/Auth/LoginForm.jsx"],"sourcesContent":["// 로그인 UI\nimport React, {useState} from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport GoogleLoginButton from './GoogleLoginButton';\n\nexport default function LoginForm({onLoginSuccess}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(''); //유효성 검사 추가하기\n\n    const handleSubmit = (e)=>{\n        e.preventDefault(); //새로고침 방지하고 현재 이메일비번 콘솔출력\n        console.log('로그인 시도: ', {email, password});\n\n        // 백엔드 연동 코드 추가\n        signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            console.log('로그인 성공:', userCredential.user);\n            // 로그인 성공 시 상태 업데이트나 페이지 이동 추가 가능\n            onLoginSuccess(); //<<--상태업데이트페이지전환\n        })\n        .catch((error) => {\n            setError('로그인 실패: ' + error.message);\n        });  \n    };\n\n    return(\n        <form onSubmit={handleSubmit} className=\"login-form\">\n            <h2 className=\"login-title\">로그인하고 포트폴리오를 만들어보세요</h2>\n            <p className=\"login-subtitle\">지금까지 쌓은 경험을,<br />나만의 방식으로 정리할 수 있어요</p>\n\n            <div className=\"input-group\">\n                <label htmlFor=\"email\">이메일 주소</label>\n                <input\n                type=\"email\"\n                id=\"email\"\n                // placeholder=\"example@domain.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                />\n            </div>\n\n            <div className=\"input-group\">\n                <label htmlFor=\"password\">비밀번호</label>\n                <input\n                type=\"password\"\n                id=\"password\"\n                // placeholder=\"********\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                />\n            </div>\n\n            {error && <p className=\"error-text\">{error}</p>}\n\n            <div className=\"login-options\">\n                <a href=\"#\">회원가입 | 비밀번호 찾기</a>\n                <button type=\"submit\" className=\"submit-button\">로그인</button>\n            </div>\n\n            <div className=\"divider\">또는</div>\n\n  <GoogleLoginButton onLoginSuccess={onLoginSuccess} />\n  {/* <NaverLoginButton /> 여기에 추가하면 돼 */}\n</form>\n\n\n        /* 기존 코드 ->  */\n\n            /* 이메일과 비밀번호 입력 폼 */\n        //     <input type=\"email\" placeholder=\"이메일\" value={email}\n        //     onChange={(e)=> setEmail(e.target.value)}\n        //     required />\n        //     {/* placeholder는 사용자에게 보여주는 회색 안내 문구임 */}\n        //     {/* 인풋에 값이 입력되어야만 폼이 제출될 수 있도록 유효성 검사하는게 required */}\n        //     <input type=\"password\" placeholder=\"비밀번호\" value={password}\n        //     onChange={(e)=>setPassword(e.target.value)}\n        //     required />\n\n        //     {/* 에러 메시지 출력 */}\n        //     {error && <p className=\"error-text\">{error}</p>}\n\n        //     <button type=\"submit\">로그인</button>\n\n        //     <GoogleLoginButton onLoginSuccess={onLoginSuccess} />\n\n        // </form>\n    );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,0BAA0B,QAAQ,eAAe;AAC1D,SAASC,IAAI,QAAQ,gBAAgB;AACrC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,SAASA,CAAC;EAACC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMe,YAAY,GAAIC,CAAC,IAAG;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE;MAACV,KAAK;MAAEE;IAAQ,CAAC,CAAC;;IAE1C;IACAV,0BAA0B,CAACC,IAAI,EAAEO,KAAK,EAAEE,QAAQ,CAAC,CAChDS,IAAI,CAAEC,cAAc,IAAK;MACtBH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEE,cAAc,CAACC,IAAI,CAAC;MAC3C;MACAf,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CACDgB,KAAK,CAAEV,KAAK,IAAK;MACdC,QAAQ,CAAC,UAAU,GAAGD,KAAK,CAACW,OAAO,CAAC;IACxC,CAAC,CAAC;EACN,CAAC;EAED,oBACInB,OAAA;IAAMoB,QAAQ,EAAEV,YAAa;IAACW,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAChDtB,OAAA;MAAIqB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpD1B,OAAA;MAAGqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAAC,2DAAY,eAAAtB,OAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,4FAAkB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEtE1B,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBtB,OAAA;QAAO2B,OAAO,EAAC,OAAO;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrC1B,OAAA;QACA4B,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC;QACH;QAAA;QACAC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGpB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAEN1B,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBtB,OAAA;QAAO2B,OAAO,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtC1B,OAAA;QACA4B,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC;QACH;QAAA;QACAC,KAAK,EAAExB,QAAS;QAChByB,QAAQ,EAAGpB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELlB,KAAK,iBAAIR,OAAA;MAAGqB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/C1B,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BtB,OAAA;QAAGkC,IAAI,EAAC,GAAG;QAAAZ,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAEN1B,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE3C1B,OAAA,CAACF,iBAAiB;MAACI,cAAc,EAAEA;IAAe;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjD;;EAGE;;EAEI;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;;EAEA;EAAA;AAER;AAACvB,EAAA,CArFuBF,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
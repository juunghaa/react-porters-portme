{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/memo/REACT/fefefe/src/components/Auth/LoginForm.jsx\",\n  _s = $RefreshSig$();\n// 로그인 UI\nimport React, { useState } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm({\n  onLoginSuccess\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); //유효성 검사 추가하기\n\n  const handleSubmit = e => {\n    e.preventDefault(); //새로고침 방지하고 현재 이메일비번 콘솔출력\n    console.log('로그인 시도: ', {\n      email,\n      password\n    });\n\n    // 백엔드 연동 코드 추가\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log('로그인 성공:', userCredential.user);\n      // 로그인 성공 시 상태 업데이트나 페이지 이동 추가 가능\n      onLoginSuccess(); //<<--상태업데이트페이지전환\n    }).catch(error => {\n      setError('로그인 실패: ' + error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onLoginSuccess: onLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","auth","GoogleLoginButton","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","console","log","then","userCredential","user","catch","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/jun8ha/memo/REACT/fefefe/src/components/Auth/LoginForm.jsx"],"sourcesContent":["// 로그인 UI\nimport React, {useState} from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport GoogleLoginButton from './GoogleLoginButton';\n\nexport default function LoginForm({onLoginSuccess}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(''); //유효성 검사 추가하기\n\n    const handleSubmit = (e)=>{\n        e.preventDefault(); //새로고침 방지하고 현재 이메일비번 콘솔출력\n        console.log('로그인 시도: ', {email, password});\n\n        // 백엔드 연동 코드 추가\n        signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            console.log('로그인 성공:', userCredential.user);\n            // 로그인 성공 시 상태 업데이트나 페이지 이동 추가 가능\n            onLoginSuccess(); //<<--상태업데이트페이지전환\n        })\n        .catch((error) => {\n            setError('로그인 실패: ' + error.message);\n        });  \n    };\n\n    return(\n        <form onSubmit={handleSubmit} className=\"login-form\">\n            <h2>로그인</h2>\n            <input type=\"email\" placeholder=\"이메일\" value={email}\n            onChange={(e)=> setEmail(e.target.value)}\n            required />\n            {/* placeholder는 사용자에게 보여주는 회색 안내 문구임 */}\n            {/* 인풋에 값이 입력되어야만 폼이 제출될 수 있도록 유효성 검사하는게 required */}\n            <input type=\"password\" placeholder=\"비밀번호\" value={password}\n            onChange={(e)=>setPassword(e.target.value)}\n            required />\n\n            {/* 에러 메시지 출력 */}\n            {error && <p className=\"error-text\">{error}</p>}\n\n            <button type=\"submit\">로그인</button>\n\n            <GoogleLoginButton onLoginSuccess={onLoginSuccess} />\n\n        </form>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
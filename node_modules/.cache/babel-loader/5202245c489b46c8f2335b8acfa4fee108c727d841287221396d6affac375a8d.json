{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/porters/src/pages/SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SignupForm from '../components/Auth/SignupForm';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { auth } from '../firebase';\nimport { register } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupPage({\n  onRegisterSuccess\n}) {\n  _s();\n  const [signupError, setSignupError] = useState('');\n  const [email, setEmail] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    setSignupError('');\n    if (password1 !== password2) {\n      setSignupError('비밀번호가 일치하지 않아요.');\n      return;\n    }\n    try {\n      const res = await register(email, password1, password2);\n      localStorage.setItem('access', res.access);\n      localStorage.setItem('refresh', res.refresh);\n      onRegisterSuccess(); // 회원가입 성공 후 이동\n    } catch (err) {\n      setSignupError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SignupForm, {\n    onSubmit: handleRegister,\n    signupError: signupError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n//   const handleSignup = async ({ email, password, name }) => {\n//     try {\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       alert('회원가입이 완료되었습니다!');\n//         // 회원가입 이후 처리 (ex: 로그인 상태 전환 등)\n//       onLoginSuccess(); // 로그인 상태 전환\n//     } catch (err) {\n//       console.error(err);\n//       setSignupError('회원가입에 실패했습니다. 다시 시도해주세요.');\n//     }\n//   };\n\n//   return (\n//     <SignupForm onSubmit={handleSignup} signupError={signupError} />\n//   );\n//}\n_s(SignupPage, \"Z6FUMEUTFrB2J59FiIjUrqNy1B0=\");\n_c = SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","SignupForm","createUserWithEmailAndPassword","register","jsxDEV","_jsxDEV","SignupPage","onRegisterSuccess","_s","signupError","setSignupError","email","setEmail","password1","setPassword1","password2","setPassword2","handleRegister","e","preventDefault","res","localStorage","setItem","access","refresh","err","message","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jun8ha/porters/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SignupForm from '../components/Auth/SignupForm';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { auth } from '../firebase';\nimport { register } from '../api';\n\nexport default function SignupPage({ onRegisterSuccess }) {\n  const [signupError, setSignupError] = useState('');\n  const [email, setEmail] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n  \n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setSignupError('');\n  \n    if (password1 !== password2) {\n        setSignupError('비밀번호가 일치하지 않아요.');\n        return;\n    }\n  \n    try {\n        const res = await register(email, password1, password2);\n        localStorage.setItem('access', res.access);\n        localStorage.setItem('refresh', res.refresh);\n        onRegisterSuccess(); // 회원가입 성공 후 이동\n    } catch (err) {\n        setSignupError(err.message);\n    }\n};\n  \n    return (\n      <SignupForm onSubmit={handleRegister} signupError={signupError} />\n    );\n  }\n  \n//   const handleSignup = async ({ email, password, name }) => {\n//     try {\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       alert('회원가입이 완료되었습니다!');\n//         // 회원가입 이후 처리 (ex: 로그인 상태 전환 등)\n//       onLoginSuccess(); // 로그인 상태 전환\n//     } catch (err) {\n//       console.error(err);\n//       setSignupError('회원가입에 실패했습니다. 다시 시도해주세요.');\n//     }\n//   };\n\n//   return (\n//     <SignupForm onSubmit={handleSignup} signupError={signupError} />\n//   );\n//}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,+BAA+B;AACtD,SAASC,8BAA8B,QAAQ,eAAe;AAC9D;AACA,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiB,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,cAAc,CAAC,EAAE,CAAC;IAElB,IAAIG,SAAS,KAAKE,SAAS,EAAE;MACzBL,cAAc,CAAC,iBAAiB,CAAC;MACjC;IACJ;IAEA,IAAI;MACA,MAAMU,GAAG,GAAG,MAAMjB,QAAQ,CAACQ,KAAK,EAAEE,SAAS,EAAEE,SAAS,CAAC;MACvDM,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,GAAG,CAACG,MAAM,CAAC;MAC1CF,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEF,GAAG,CAACI,OAAO,CAAC;MAC5CjB,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACVf,cAAc,CAACe,GAAG,CAACC,OAAO,CAAC;IAC/B;EACJ,CAAC;EAEG,oBACErB,OAAA,CAACJ,UAAU;IAAC0B,QAAQ,EAAEV,cAAe;IAACR,WAAW,EAAEA;EAAY;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEtE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAAvB,EAAA,CA7CwBF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
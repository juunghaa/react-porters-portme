{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/memo/REACT/fefefe/src/components/Auth/SignupForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupForm() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [error, setError] = useState(''); //유효성 검사 추가하기\n\n  //async는 순차적 실행한다는 뜻이라고 봐도 됨\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('회원가입 정보: ', {\n      email,\n      password,\n      confirm\n    });\n    //Firebase 연동 코드 추가하기\n\n    setError('');\n    if (!email.includes('@')) {\n      setError(\"유효한 이메일을 입력해주세요.\");\n      return;\n    }\n    if (password.length < 6) {\n      setError(\"비밀번호는 최소 6자 이상이어야 합니다.\");\n      return;\n    }\n    if (password !== confirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert(\"회원가입이 완료되었습니다!\");\n      // 회원가입 이후 처리 (ex: 로그인 상태 전환 등)\n    } catch (err) {\n      setError(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"signup-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      value: confirm,\n      onChange: e => setConfirm(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(SignupForm, \"Bv6dYcfEx7t5KiRDIkPxLv4Sc5o=\");\n_c = SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsxDEV","_jsxDEV","SignupForm","_s","email","setEmail","password","setPassword","confirm","setConfirm","error","setError","handleSubmit","e","preventDefault","console","log","includes","length","alert","err","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/jun8ha/memo/REACT/fefefe/src/components/Auth/SignupForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\n\nexport default function SignupForm() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirm, setConfirm] = useState('');\n    const [error, setError] = useState(''); //유효성 검사 추가하기\n\n    //async는 순차적 실행한다는 뜻이라고 봐도 됨\n    const handleSubmit= async (e)=>{\n        e.preventDefault();\n        console.log('회원가입 정보: ', {email, password, confirm})\n        //Firebase 연동 코드 추가하기\n\n        setError('');\n        if (!email.includes('@')) {\n            setError(\"유효한 이메일을 입력해주세요.\");\n            return;\n        }\n        if (password.length<6) {\n            setError(\"비밀번호는 최소 6자 이상이어야 합니다.\");\n            return;\n        }\n        if (password!==confirm){\n            setError('비밀번호가 일치하지 않습니다.');\n            return;\n        }\n        try {\n            await createUserWithEmailAndPassword(auth, email, password);\n            alert(\"회원가입이 완료되었습니다!\");\n            // 회원가입 이후 처리 (ex: 로그인 상태 전환 등)\n          } catch (err) {\n            setError(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\n            console.error(err);\n          }\n        };\n\n    return(\n        <form onSubmit={handleSubmit} className=\"signup-form\">\n            <h2>회원가입</h2>\n            <input type=\"email\" placeholder=\"이메일\" value={email}\n            onChange={(e)=> setEmail(e.target.value)} required />\n            <input type=\"password\" placeholder=\"비밀번호\" value={password}\n            onChange={(e)=>setPassword(e.target.value)} required />\n            <input type=\"password\" placeholder=\"비밀번호 확인\" value={confirm}\n            onChange={(e)=>setConfirm(e.target.value)} required />\n            \n            {error && <p className=\"error-text\">{error}</p>}\n            \n            <button type=\"submit\">가입하기</button>\n        </form>\n    );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
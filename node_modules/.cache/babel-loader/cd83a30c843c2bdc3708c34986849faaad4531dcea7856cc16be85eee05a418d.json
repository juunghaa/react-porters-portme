{"ast":null,"code":"var _jsxFileName = \"/Users/jun8ha/porters/src/components/Auth/GoogleLoginButton.jsx\";\n// GoogleLoginButton.jsx\nimport React from 'react';\nimport { signInWithPopup } from 'firebase/auth';\nimport { auth, provider } from '../../firebase';\nimport { googleLogin } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GoogleLoginButton({\n  onLoginSuccess\n}) {\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const token = await result.user.getIdToken();\n      const credential = provider.credentialFromResult(result);\n      const accessToken = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n      if (!accessToken) {\n        throw new Error('Google access token이 없습니다.');\n      }\n      const res = await googleLogin(accessToken);\n      localStorage.setItem('access', res.access);\n      localStorage.setItem('refresh', res.refresh);\n      console.log('구글 로그인 성공:', result.user);\n      onLoginSuccess(); // 로그인 성공시 상태 업데이트\n    } catch (error) {\n      console.error('구글 로그인 실패:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleGoogleLogin,\n    className: \"google-login-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/google-icon.svg\",\n      alt: \"Google logo image\",\n      width: \"20\",\n      height: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \"Google\\uB85C \\uB85C\\uADF8\\uC778\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","signInWithPopup","auth","provider","googleLogin","jsxDEV","_jsxDEV","GoogleLoginButton","onLoginSuccess","handleGoogleLogin","result","token","user","getIdToken","credential","credentialFromResult","accessToken","Error","res","localStorage","setItem","access","refresh","console","log","error","onClick","className","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jun8ha/porters/src/components/Auth/GoogleLoginButton.jsx"],"sourcesContent":["// GoogleLoginButton.jsx\nimport React from 'react';\nimport { signInWithPopup } from 'firebase/auth';\nimport { auth, provider } from '../../firebase';\nimport { googleLogin } from '../api';\n\nexport default function GoogleLoginButton({ onLoginSuccess }) {\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const token = await result.user.getIdToken();\n\n      const credential = provider.credentialFromResult(result);\n      const accessToken = credential?.accessToken;\n      if(!accessToken) {\n        throw new Error('Google access token이 없습니다.');\n      }\n\n      const res = await googleLogin(accessToken);\n      localStorage.setItem('access', res.access);\n      localStorage.setItem('refresh', res.refresh);\n      console.log('구글 로그인 성공:', result.user);\n      onLoginSuccess();  // 로그인 성공시 상태 업데이트\n    } catch (error) {\n      console.error('구글 로그인 실패:', error);\n    }\n  };\n\n  return (\n    <button onClick={handleGoogleLogin} className=\"google-login-button\">\n      <img src=\"/google-icon.svg\" alt=\"Google logo image\" width=\"20\" height=\"20\" />\n      Google로 로그인\n    </button>\n  );\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,gBAAgB;AAC/C,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,iBAAiBA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAC5D,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMT,eAAe,CAACC,IAAI,EAAEC,QAAQ,CAAC;MACpD,MAAMQ,KAAK,GAAG,MAAMD,MAAM,CAACE,IAAI,CAACC,UAAU,CAAC,CAAC;MAE5C,MAAMC,UAAU,GAAGX,QAAQ,CAACY,oBAAoB,CAACL,MAAM,CAAC;MACxD,MAAMM,WAAW,GAAGF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,WAAW;MAC3C,IAAG,CAACA,WAAW,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,GAAG,GAAG,MAAMd,WAAW,CAACY,WAAW,CAAC;MAC1CG,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,GAAG,CAACG,MAAM,CAAC;MAC1CF,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEF,GAAG,CAACI,OAAO,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,MAAM,CAACE,IAAI,CAAC;MACtCJ,cAAc,CAAC,CAAC,CAAC,CAAE;IACrB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAQoB,OAAO,EAAEjB,iBAAkB;IAACkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBACjEtB,OAAA;MAAKuB,GAAG,EAAC,kBAAkB;MAACC,GAAG,EAAC,mBAAmB;MAACC,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,mCAE/E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACC,EAAA,GA5BuB9B,iBAAiB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}